// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginForm renders LoginForm component 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <withRouter(LoginForm)
      error={null}
      loading={false}
      logIn={[MockFunction]}
    >
      <LoginForm
        error={null}
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        loading={false}
        location={
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          }
        }
        logIn={[MockFunction]}
        match={
          Object {
            "isExact": true,
            "params": Object {},
            "path": "/",
            "url": "/",
          }
        }
      >
        <form
          className="form"
          onSubmit={[Function]}
        >
          <Label
            htmlFor="email"
          >
            <label
              className="label "
              htmlFor="email"
            >
              Email
            </label>
          </Label>
          <Input
            id="email"
            name="email"
            onChange={[Function]}
            required={true}
            type="text"
            value=""
          >
            <input
              className="input "
              id="email"
              name="email"
              onChange={[Function]}
              required={true}
              type="text"
              value=""
            />
          </Input>
          <Label
            htmlFor="password"
          >
            <label
              className="label "
              htmlFor="password"
            >
              Password
            </label>
          </Label>
          <Input
            id="password"
            name="password"
            onChange={[Function]}
            required={true}
            type="password"
            value=""
          >
            <input
              className="input "
              id="password"
              name="password"
              onChange={[Function]}
              required={true}
              type="password"
              value=""
            />
          </Input>
          <div
            className="buttonContainer"
          >
            <ButtonLight
              onClick={[Function]}
              type="button"
            >
              <button
                className="button "
                onClick={[Function]}
                type="button"
              >
                Cancel
              </button>
            </ButtonLight>
            <ButtonDark
              loading="false"
              type="submit"
            >
              <button
                className="buttonDark "
                loading="false"
                type="submit"
              >
                Sign in
              </button>
            </ButtonDark>
          </div>
        </form>
      </LoginForm>
    </withRouter(LoginForm)>
  </Router>
</BrowserRouter>
`;
